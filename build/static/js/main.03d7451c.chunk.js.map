{"version":3,"sources":["BookmarksContext.js","config.js","AddBookmark/AddBookmark.js","EditBookmark/EditBookmark.js","Rating/Rating.js","BookmarkItem/BookmarkItem.js","BookmarkList/BookmarkList.js","Nav/Nav.js","App.js","index.js"],"names":["BookmarksContext","React","createContext","bookmarks","addBookmark","deleteBookmark","updateBookmark","process","Required","className","AddBookmark","state","error","handleSubmit","e","preventDefault","target","title","url","description","rating","bookmark","value","setState","fetch","config","method","body","JSON","stringify","headers","then","res","ok","json","Promise","reject","data","context","props","history","push","catch","console","handleClickCancel","this","onSubmit","role","message","htmlFor","type","name","id","placeholder","required","defaultValue","min","max","onClick","Component","contextType","EditBookmark","desciption","handleChangeTitle","handleChangeUrl","handleChangeDescription","handleChangeRating","bookmarkId","match","params","newBookmark","resetFields","newFields","responseData","onChange","Rating","stars","map","_","i","BookmarkItem","Consumer","href","rel","to","cb","defaultProps","onClickDelete","BookmarkList","aria-live","Nav","App","setBookmarks","newBookmarks","filter","bm","updatedBookmark","contextValue","Provider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03d7451c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst BookmarksContext = React.createContext({\r\n  bookmarks: [],\r\n  addBookmark: () => {},\r\n  deleteBookmark: () => {},\r\n  updateBookmark: () => {},\r\n})\r\n\r\nexport default BookmarksContext","export default {\r\n    API_ENDPOINT: `https://tranquil-basin-58871.herokuapp.com`,\r\n    API_KEY: process.env.REACT_APP_API_KEY,\r\n  }","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookmarksContext from '../BookmarksContext';\r\nimport config from '../config';\r\nimport './AddBookmark.css';\r\n\r\nconst Required = () => (\r\n    <span className = 'AddBookmark__required'>*</span>\r\n)\r\n\r\nclass AddBookmark extends Component {\r\n    static propTypes = {\r\n        history: PropTypes.shape({\r\n            push: PropTypes.func\r\n        }).isRequired\r\n    };\r\n\r\n    static contextType = BookmarksContext;\r\n\r\n    state = {\r\n        error: null,\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        //get the form fields from the event\r\n        const {title, url, description, rating} = e.target\r\n        const bookmark = {\r\n            title: title.value,\r\n            url: url.value,\r\n            description: description.value,\r\n            rating: rating.value,\r\n        }\r\n        this.setState({error: null})\r\n        fetch(config.API_ENDPOINT, {\r\n            method: 'POST',\r\n            body: JSON.stringify(bookmark),\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'authorization': `bearer ${config.API_KEY}`\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                return res.json().then(error => Promise.reject(error))\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(data => {\r\n            title.value = \"\"\r\n            url.value = \"\"\r\n            description.value = \"\"\r\n            rating.value = \"\"\r\n            this.context.addBookmark(data)\r\n            this.props.history.push('/')\r\n        })\r\n        .catch(error => {\r\n            console.error(error)\r\n            this.setState({error})\r\n        })\r\n    }\r\n\r\n    handleClickCancel = () => {\r\n        this.props.history.push('/')\r\n    };\r\n\r\n    render() {\r\n        const {error} = this.state\r\n        return (\r\n            <section className = 'AddBookmark'>\r\n                <h2>Create a Bookmark</h2>\r\n                <form\r\n                className = 'AddBookmark__form'\r\n                onSubmit = {this.handleSubmit}\r\n            >\r\n                <div className = 'AddBookmark__error' role = 'alert'>\r\n                    {error && <p>{error.message}</p>}\r\n                </div>\r\n                <div>\r\n                    <label htmlFor = 'title'>\r\n                        Title\r\n                        {\" \"}\r\n                        <Required />\r\n                    </label>\r\n                    <input\r\n                    type = 'text'\r\n                    name = 'title'\r\n                    id = 'title'\r\n                    placeholder = 'Great Website!'\r\n                    required\r\n                />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor = 'url'>\r\n                        URL\r\n                        {\" \"}\r\n                        <Required />\r\n                    </label>\r\n                    <input\r\n                        type = 'url'\r\n                        name = 'url'\r\n                        id = 'url'\r\n                        placeholder = 'https://www.great-website.com/'\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor = 'description'>\r\n                        Description\r\n                    </label>\r\n                    <textarea\r\n                        name = 'description'\r\n                        id = 'description'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor = 'rating'>\r\n                        Rating\r\n                        {\" \"}\r\n                        <Required />\r\n                    </label>\r\n                    <input\r\n                    type = 'number'\r\n                    name = 'rating'\r\n                    id = 'rating'\r\n                    defaultValue = '1'\r\n                    min = '1'\r\n                    max = '5'\r\n                    required\r\n                />\r\n                </div>\r\n                <div className = 'AddBookmark__buttons'>\r\n                    <button type = 'button' onClick = {this.handleClickCancel}>\r\n                        Cancel\r\n                    </button>\r\n                    {\" \"}\r\n                    <button type = 'submit'>\r\n                        Save\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddBookmark;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookmarksContext from '../BookmarksContext';\r\nimport config from '../config';\r\nimport './EditBookmark.css';\r\n\r\nconst Required = () => (\r\n    <span className = 'EditBookmark__required'>*</span>\r\n)\r\n\r\nclass EditBookmark extends Component {\r\n    static propTypes = {\r\n        match: PropTypes.shape({\r\n            params: PropTypes.object,\r\n        }),\r\n        history: PropTypes.shape({\r\n            push: PropTypes.func,\r\n        }).isRequired,\r\n    };\r\n\r\n    static contextType = BookmarksContext;\r\n\r\n    state = {\r\n        error: null,\r\n        id: \"\",\r\n        title: \"\",\r\n        url: \"\",\r\n        desciption: \"\",\r\n        rating: 1\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {bookmarkId} = this.props.match.params\r\n        fetch(config.API_ENDPOINT + `${bookmarkId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': `Bearer ${config.API_KEY}`\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok)\r\n                    return res.json().then(error => Promise.reject(error))\r\n\r\n                return res.json()\r\n            })\r\n            .then(responseData => {\r\n                this.setState({\r\n                    id: responseData.id,\r\n                    title: responseData.title,\r\n                    url: responseData.url,\r\n                    desciption: responseData.desciption,\r\n                    rating: responseData.rating\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n                this.setState({error})\r\n            })\r\n    }\r\n\r\n    handleChangeTitle = e => {\r\n        this.setState({title: e.target.value})\r\n    };\r\n\r\n    handleChangeUrl = e => {\r\n        this.setState({url: e.target.value})\r\n    };\r\n\r\n    handleChangeDescription = e => {\r\n        this.setState({description: e.target.value})\r\n    };\r\n\r\n    handleChangeRating = e => {\r\n        this.setState({rating: e.target.value})\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { bookmarkId } = this.props.match.params\r\n        const { id, title, url, description, rating } = this.state\r\n        const newBookmark = { id, title, url, description, rating }\r\n        fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\r\n          method: 'PATCH',\r\n          body: JSON.stringify(newBookmark),\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            'authorization': `Bearer ${config.API_KEY}`\r\n          },\r\n        })\r\n          .then(res => {\r\n            if (!res.ok)\r\n              return res.json().then(error => Promise.reject(error))\r\n          })\r\n          .then(() => {\r\n            this.resetFields(newBookmark)\r\n            this.context.updateBookmark(newBookmark)\r\n            this.props.history.push('/')\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n            this.setState({ error })\r\n          })\r\n      }\r\n\r\n      resetFields = (newFields) => {\r\n        this.setState({\r\n          id: newFields.id || '',\r\n          title: newFields.title || '',\r\n          url: newFields.url || '',\r\n          description: newFields.description || '',\r\n          rating: newFields.rating || '',\r\n        })\r\n      }\r\n    \r\n      handleClickCancel = () => {\r\n        this.props.history.push('/')\r\n      };\r\n\r\n      render() {\r\n        const { error, title, url, description, rating } = this.state\r\n        return (\r\n          <section className='EditBookmark'>\r\n            <h2>Edit bookmark</h2>\r\n            <form\r\n              className='EditBookmark__form'\r\n              onSubmit={this.handleSubmit}\r\n            >\r\n              <div className='EditBookmark__error' role='alert'>\r\n                {error && <p>{error.message}</p>}\r\n              </div>\r\n              <input\r\n                type='hidden'\r\n                name='id'\r\n              />\r\n              <div>\r\n                <label htmlFor='title'>\r\n                  Title\r\n                  {' '}\r\n                  <Required />\r\n                </label>\r\n                <input\r\n                  type='text'\r\n                  name='title'\r\n                  id='title'\r\n                  placeholder='Great website!'\r\n                  required\r\n                  value={title}\r\n                  onChange={this.handleChangeTitle}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor='url'>\r\n                  URL\r\n                  {' '}\r\n                  <Required />\r\n                </label>\r\n                <input\r\n                  type='url'\r\n                  name='url'\r\n                  id='url'\r\n                  placeholder='https://www.great-website.com/'\r\n                  required\r\n                  value={url}\r\n                  onChange={this.handleChangeUrl}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor='description'>\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  name='description'\r\n                  id='description'\r\n                  value={description}\r\n                  onChange={this.handleChangeDescription}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor='rating'>\r\n                  Rating\r\n                  {' '}\r\n                  <Required />\r\n                </label>\r\n                <input\r\n                  type='number'\r\n                  name='rating'\r\n                  id='rating'\r\n                  min='1'\r\n                  max='5'\r\n                  required\r\n                  value={rating}\r\n                  onChange={this.handleChangeRating}\r\n                />\r\n              </div>\r\n              <div className='EditBookmark__buttons'>\r\n                <button type='button' onClick={this.handleClickCancel}>\r\n                  Cancel\r\n                </button>\r\n                {' '}\r\n                <button type='submit'>\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </section>\r\n        );\r\n      }\r\n}\r\n\r\nexport default EditBookmark;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Rating.css';\r\n\r\nexport default function Rating(props) {\r\n    const stars = [0, 0, 0, 0, 0].map((_, i) =>\r\n    (i < props.value)\r\n        ? <span key = {i}> &#9733; </span>\r\n        : <span key = {i}> &#9734; </span>\r\n    );\r\n    return (\r\n        <div className = 'rating'>\r\n            {stars}\r\n        </div>\r\n    );\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.oneOf([1, 2, 3, 4, 5]).isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Rating from '../Rating/Rating';\r\nimport BookmarksContext from '../BookmarksContext';\r\nimport config from '../config';\r\nimport './BookmarkItem.css';\r\n\r\nfunction deleteBookmarkRequest(bookmarkId, cb) {\r\n  fetch(config.API_ENDPOINT + `/${bookmarkId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'authorization': `bearer ${config.API_KEY}`\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (!res.ok) {\r\n        return res.json().then(error => Promise.reject(error))\r\n      }\r\n      return res.json()\r\n    })\r\n    .then(data => {\r\n      cb(bookmarkId)\r\n    })\r\n    .catch(error => {\r\n      console.error(error)\r\n    })\r\n}\r\n\r\nexport default function BookmarkItem(props) {\r\n  return (\r\n    <BookmarksContext.Consumer>\r\n      {(context) => (\r\n        <li className='BookmarkItem'>\r\n          <div className='BookmarkItem__row'>\r\n            <h3 className='BookmarkItem__title'>\r\n              <a\r\n                href={props.url}\r\n                target='_blank'\r\n                rel='noopener noreferrer'>\r\n                {props.title}\r\n              </a>\r\n            </h3>\r\n            <Rating value={props.rating} />\r\n          </div>\r\n          <p className='BookmarkItem__description'>\r\n            {props.description}\r\n          </p>\r\n          <div className='BookmarkItem__buttons'>\r\n            <Link to={`/edit/${props.id}`}>\r\n              Edit\r\n            </Link>\r\n            {' '}\r\n            <button\r\n              className='BookmarkItem__description'\r\n              onClick={() =>\r\n                deleteBookmarkRequest(props.id, context.deleteBookmark)\r\n              }\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </li>\r\n      )}\r\n    </BookmarksContext.Consumer>\r\n  )\r\n}\r\n\r\nBookmarkItem.defaultProps = {\r\n  onClickDelete: () => {},\r\n}\r\n\r\nBookmarkItem.propTypes = {\r\n  id: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]).isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  desciption: PropTypes.string,\r\n  rating: PropTypes.number.isRequired,\r\n  onClickDelete: PropTypes.func,\r\n}","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BookmarksContext from '../BookmarksContext';\r\nimport BookmarkItem from '../BookmarkItem/BookmarkItem';\r\nimport './BookmarkList.css';\r\n\r\nclass BookmarkList extends Component {\r\n    static propTypes = {\r\n        bookmarks: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                id: PropTypes.oneOfType([\r\n                    PropTypes.number,\r\n                    PropTypes.string\r\n                ]).isRequired,\r\n            })\r\n        )\r\n    };\r\n\r\n    static defaultProps = {\r\n        bookmarks: []\r\n    };\r\n\r\n    static contextType = BookmarksContext;\r\n\r\n    render() {\r\n        const {bookmarks} = this.context\r\n        return (\r\n            <section className = 'BookmarkList'>\r\n                <h2>Your Bookmarks</h2>\r\n                <ul className = 'BookmarkList__list' aria-live = 'polite'>\r\n                    {bookmarks.map(bookmark =>\r\n                        <BookmarkItem\r\n                            key = {bookmark.id}\r\n                            {...bookmark}\r\n                        />\r\n                    )}\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookmarkList;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Nav(props) {\r\n    return (\r\n        <nav className = 'Nav'>\r\n            <Link to = {'/'}>\r\n            Bookmark List\r\n            </Link>\r\n            {' '}\r\n            <Link to = {'/add-bookmark'}>\r\n                Add Bookmark\r\n            </Link>\r\n        </nav>\r\n    );\r\n}","import React, {Component} from 'react';\nimport {Route} from 'react-router-dom';\nimport AddBookmark from './AddBookmark/AddBookmark';\nimport EditBookmark from './EditBookmark/EditBookmark';\nimport BookmarkList from './BookmarkList/BookmarkList';\nimport BookmarksContext from './BookmarksContext';\nimport Nav from './Nav/Nav';\nimport config from './config';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    bookmarks: [],\n    error: null\n  };\n\n  setBookmarks = bookmarks => {\n    this.setState({\n      bookmarks,\n      error: null,\n    })\n  }\n\n  addBookmark = bookmark => {\n    this.setState({\n      bookmarks: [...this.state.bookmarks, bookmark],\n    })\n  }\n\n  deleteBookmark = bookmarkId => {\n    const newBookmarks = this.state.bookmarks.filter(bm =>\n      bm.id !== bookmarkId\n      )\n      this.setState({\n        bookmarks: newBookmarks\n      })\n  }\n\n  componentDidMount() {\n    fetch(config.API_ENDPOINT, {\n      method: 'GET',\n      headers: {\n        'content-type': 'applicaton/json',\n        'Authorization': `Bearer ${config.API_KEY}`\n      }\n    })\n    .then(res => {\n      if (!res.ok) {\n        return res.json().then(error => Promise.reject(error))\n      }\n      return res.json()\n  })\n  .then(this.setBookmarks)\n  .catch(error => {\n    console.error(error)\n    this.setState({error})\n  })\n  }\n\n  updateBookmark = updatedBookmark => {\n    this.setState({\n      bookmarks: this.state.bookmarks.map(bm =>\n        (bm.id !== updatedBookmark.id) ? bm : updatedBookmark\n      )\n    })\n  }\n\n  render() {\n    const contextValue = {\n      bookmarks: this.state.bookmarks,\n      addBookmark: this.addBookmark,\n      deleteBookmark: this.deleteBookmark,\n      updateBookmark: this.updateBookmark\n    }\n    return (\n      <main className='App'>\n        <h1>Bookmarks!</h1>\n        <BookmarksContext.Provider value={contextValue}>\n          <Nav />\n          <div className='content' aria-live='polite'>\n            <Route\n              exact\n              path='/'\n              component={BookmarkList}\n            />\n            <Route\n              path='/add-bookmark'\n              component={AddBookmark}\n            />\n            <Route\n              path='/edit/:bookmarkId'\n              component={EditBookmark}\n            />\n          </div>\n        </BookmarksContext.Provider>\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}